@model IEnumerable<AlimGroupByTeklifIdAlimDetaylarViewModel>


@*----------------loading gif--------------------*@
<div class="row">
    <div class="col-lg-3">
    </div>
    <div class="col-lg-4">
        <div id="loading" align="center" style="margin-top: 10%">
            <img src="~/Content/images/orig.gif" />
        </div>
    </div>
    <div class="col-lg-4">
    </div>
</div>
<!-- Renk Modal -->
<div class="modal fade" id="exampleModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Açıklama</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <h6>Renklerin Anlamı</h6>
                <h8>Alım durumu</h8>
                <div class="arkaPlanRengiBeklemede">Bekleniyor</div>
                <div class="arkaPlanRengiBarkodluGonderildi">Barkodlu Gönderildi</div>
                <div class="arkaPlanRengiBarkodsuzGonderildi">Barkodsuz Gönderildi</div>
                <div class="arkaPlanRengiAktif">Eczane Stoğunda</div>
                <div class="arkaPlanRengiPasif">Yanlış İlaç Gönderimi</div>
                <hr />
                <h6>Tablo Kullanımı</h6>

                + işaretine basınca alımların ayrıntılarını görebilirsiniz. 

            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Kapat</button>
            </div>
        </div>
    </div>
</div>

<div id="div1" style="visibility:hidden" class="row">
    <div class="col-12" >
        <div class="row">
            <div class="col-2">
                <div class="input-group mb-2">
                    <div class="input-group-prepend">
                        <span class="input-group-text" id="basic-addon1"><i class="fa fa-search"></i></span>
                    </div>
                    <input type="text" id="myInput" class="form-control filtreDropDown" placeholder="Ana Tabloda Ara.." aria-label="Ara.." aria-describedby="basic-addon1">
                </div>
            </div>
            <div class="col-2">
                <div id="ddlteklifDurumu" class="form-group mr-3">

                    @Html.DropDownList("TeklifDurumIdFilter", null, htmlAttributes: new
               {
                   @class = "form-control filtreDropDown",
                   @id = "teklifDurumId"
                   ,
                   onchange = "filterTeklifDurum(event)"

               }, optionLabel: "Filtre; Teklif Durum Seç"
                  )
                </div>
            </div>
            <div class="col-2">
                <div id="ddlalimDurumu" class="form-group mr-3">

                    @Html.DropDownList("AlimDurumIdFilter", null, htmlAttributes: new
               {
                   @class = "form-control filtreDropDown",
                   @id = "alimDurumId"
                   ,
                   onchange = "filterAlimDurum(event)"

               }, optionLabel: "Filtre; Alım Durum Seç"
                  )
                </div>
            </div>
            <div class="col-2">
                @if (TempData["MessageSuccess"] != null)
                {
                    @*<p>&nbsp;</p>*@
                    <div class="alert alert-success">
                        <i class="fa fa-info-circle fa-x"></i>

                        @TempData["MessageSuccess"]
                    </div>
                }
                @if (TempData["MessageDanger"] != null)
                {

                    <div class="alert alert-danger">
                        <i class="fa fa-info-circle fa-x"></i>

                        @TempData["MessageDanger"]
                    </div>
                }


            </div>
            <div class="col-2">
                <!-- Button trigger renk modal -->
                <div class="pull-right" title="Renkler ne anlama geliyor">
                    <button type="button" class="btn btn-outline-warning fa fa-exclamation-triangle" data-toggle="modal" data-target="#exampleModal"></button>

                </div>
                <button class="btn btn-outline-dark btn-sm" type="button" id="btnExceleAktar">
                    <i class="fa fa-file-excel-o text-success"></i> Excele Aktar
                    <i class="fa fa-download"></i>
                </button>
            </div>
            <div class="col-2">
                <div class="input-group">
                    <div class="input-group-prepend">
                        <span class="input-group-text" id="basic-addon1"><i class="fa fa-search"></i></span>
                    </div>
                    <input type="text" id="myInputForSubGrid" class="form-control filtreDropDown" placeholder="İç Tabloda Ara.." aria-label="Ara.." aria-describedby="basic-addon1">
                </div>
            </div>
        </div>
    </div>   
    <div id="main" class="col-12">
            <table id="gridT" class="table table-sm table-hover">
                <thead class="thead-light">
                    <tr class="tableRowDesign">
                        <th></th>
                        <th>
                            @Html.DisplayNameFor(model => model.AlimGroupByTeklifId.IlacAdi)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.AlimGroupByTeklifId.MalFazlasi)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.AlimGroupByTeklifId.HedeflenenAlim)
                        </th>
                        <th>
                            Alımlar
                        </th>
                        <th>
                            Kalan
                        </th>
                        <th>
                            Toplam Alımım
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.AlimGroupByTeklifId.NetFiyat)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.AlimGroupByTeklifId.DepoFiyat)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.AlimGroupByTeklifId.TeklifiVerenEczaneAdi)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.AlimGroupByTeklifId.IlacMiad)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.AlimGroupByTeklifId.GrupAdi)
                        </th>
                        <th>
                            Min-Max
                        </th>
                        <th>
                            Geçerlilik
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.AlimGroupByTeklifId.TeklifDurumAdi)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.AlimGroupByTeklifId.AlimDurumAdi)
                        </th>
                        <th>
                        </th>

                    </tr>
                </thead>
                <tbody id="eczaneTablo">
                    @foreach (var item in Model.ToList())
                    {

                        <tr class="tableRowDesign">
                            <td></td>
                            <td>
                                @Html.DisplayFor(modelItem => item.AlimGroupByTeklifId.IlacAdi)
                            </td>
                            <td>
                                @Html.DisplayFor(model => item.AlimGroupByTeklifId.MalFazlasi)
                            </td>
                            <td>
                                @Html.DisplayFor(model => item.AlimGroupByTeklifId.HedeflenenAlim)
                            </td>
                            <td>
                                @Html.DisplayFor(model => item.AlimGroupByTeklifId.ToplamAlimMiktari)
                            </td>
                            <td>
                                @Html.DisplayFor(model => item.AlimGroupByTeklifId.Kalan)
                            </td>
                            <td>
                                @Html.DisplayFor(model => item.AlimGroupByTeklifId.ToplamAlimlar)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.AlimGroupByTeklifId.NetFiyat)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.AlimGroupByTeklifId.DepoFiyat)
                            </td>
                            <td>
                                @Html.DisplayFor(model => item.AlimGroupByTeklifId.TeklifiVerenEczaneAdi)
                            </td>
                            <td>
                                @Html.DisplayFor(model => item.AlimGroupByTeklifId.IlacMiad)
                            </td>
                            <td>
                                @Html.DisplayFor(model => item.AlimGroupByTeklifId.GrupAdi)
                            </td>
                            <td>
                                @Html.DisplayFor(model => item.AlimGroupByTeklifId.Minimum)-@Html.DisplayFor(model => item.AlimGroupByTeklifId.Maksimum)
                            </td>
                            @if (item.AlimGroupByTeklifId.BitisTarihi != null)
                            {
                                try
                                {
                                    if (Convert.ToInt32(Convert.ToDateTime(item.AlimGroupByTeklifId.BitisTarihi).Subtract(System.DateTime.Now).ToString().Substring(0,
                       Convert.ToDateTime(item.AlimGroupByTeklifId.BitisTarihi).Subtract(System.DateTime.Now).ToString().IndexOf("."))) <= 3)
                                    {
                                        <td style="color:red">
                                            @Convert.ToDateTime(item.AlimGroupByTeklifId.BitisTarihi).Subtract(System.DateTime.Now).ToString().Substring(0,
                                             Convert.ToDateTime(item.AlimGroupByTeklifId.BitisTarihi).Subtract(System.DateTime.Now).ToString().IndexOf(".")) gün kaldı

                                        </td>
                                    }
                                    else if (Convert.ToInt32(Convert.ToDateTime(item.AlimGroupByTeklifId.BitisTarihi).Subtract(System.DateTime.Now).ToString().Substring(0,
                                    Convert.ToDateTime(item.AlimGroupByTeklifId.BitisTarihi).Subtract(System.DateTime.Now).ToString().IndexOf("."))) < 2)
                                    {
                                        <td style="color:red">
                                            Bugün Son
                                        </td>
                                    }
                                    else if (Convert.ToInt32(Convert.ToDateTime(item.AlimGroupByTeklifId.BitisTarihi).Subtract(System.DateTime.Now).ToString().Substring(0,
                                    Convert.ToDateTime(item.AlimGroupByTeklifId.BitisTarihi).Subtract(System.DateTime.Now).ToString().IndexOf("."))) > 3)
                                    {
                                        <td>
                                            @Convert.ToDateTime(item.AlimGroupByTeklifId.BitisTarihi).Subtract(System.DateTime.Now).ToString().Substring(0,
                                             Convert.ToDateTime(item.AlimGroupByTeklifId.BitisTarihi).Subtract(System.DateTime.Now).ToString().IndexOf(".")) gün kaldı

                                        </td>
                                    }
                                    else
                                    {
                                        <td>
                                            Süre Geçti
                                        </td>
                                    }
                                }
                                catch
                                {
                                    <td></td>
                                }
                            }
                            else
                            {
                                <td>
                                    Süre Yok
                                </td>
                            }
                            <td>
                                @Html.DisplayFor(model => item.AlimGroupByTeklifId.TeklifDurumAdi)
                            </td>
                            <td>
                                @Html.DisplayFor(model => item.AlimGroupByTeklifId.AlimDurumAdi)
                            </td>
                            <td>

                                <table class="table table-sm table-hover" id="subT">
                                    <thead class="thead-light tableInnerRowDesign">
                                        <tr>
                                            <th>

                                            </th>
                                            <th>
                                                @Html.DisplayNameFor(model => model.FirstOrDefault().AlimDetaylar.FirstOrDefault().EczaneAdi)
                                            </th>
                                            <th>
                                                @Html.DisplayNameFor(model => model.FirstOrDefault().AlimDetaylar.FirstOrDefault().Miktar)
                                            </th>
                                            <th>
                                                @Html.DisplayNameFor(model => model.FirstOrDefault().AlimDetaylar.FirstOrDefault().AlimDurumAdi)
                                            </th>
                                            <th>
                                                @Html.DisplayNameFor(model => model.FirstOrDefault().AlimDetaylar.FirstOrDefault().ITStransferDurumAdi)
                                            </th>

                                            <th>
                                                @Html.DisplayNameFor(model => model.FirstOrDefault().AlimDetaylar.FirstOrDefault().GonderimTarihi)
                                            </th>
                                            <th>
                                                @Html.DisplayNameFor(model => model.FirstOrDefault().AlimDetaylar.FirstOrDefault().TeslimAlimTarihi)
                                            </th>
                                            <td style="display:none">
                                                @Html.DisplayFor(modelItem => item.AlimGroupByTeklifId.IlacAdi)
                                            </td>
                                            <td style="display:none">
                                                @Html.DisplayFor(modelItem => item.AlimGroupByTeklifId.TeklifDurumAdi)
                                            </td>
                                            <td style="display:none">
                                                @Html.DisplayFor(modelItem => item.AlimGroupByTeklifId.ITStransferDurumAdi)
                                            </td>
                                            <td style="display:none">
                                                @Html.DisplayFor(modelItem => item.AlimGroupByTeklifId.TeklifVerenEczaneGrupAdi)
                                            </td>
                                            <td style="display:none">
                                                @Html.DisplayFor(model => item.AlimGroupByTeklifId.TeklifTurAdi)
                                            </td>

                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var subItem in item.AlimDetaylar)
                                        {
                                            <tr class="tableInnerRowDesign" name="subtr_@subItem.AlimDurumId ">
                                                <td>
                                                    @*<input class="subGridCheckBox" id="alimDetay_@subItem.Id"
                                                        value="@subItem.Id" type="checkbox" />*@
                                                </td>
                                                <td>
                                                    @Html.DisplayFor(model => subItem.EczaneAdi)
                                                </td>
                                                <td>
                                                    @Html.DisplayFor(model => subItem.Miktar)
                                                </td>
                                                <td>
                                                    @Html.DisplayFor(model => subItem.AlimDurumAdi)
                                                </td>
                                                <td>
                                                    @Html.DisplayFor(model => subItem.ITStransferDurumAdi)
                                                </td>
                                                <td>
                                                    @Html.DisplayFor(model => subItem.GonderimTarihi)
                                                </td>
                                                <td>
                                                    @Html.DisplayFor(model => subItem.TeslimAlimTarihi)
                                                </td>
                                                <td style="display:none">
                                                    @Html.DisplayFor(modelItem => item.AlimGroupByTeklifId.IlacAdi)
                                                </td>
                                                <td style="display:none">
                                                    @Html.DisplayFor(modelItem => item.AlimGroupByTeklifId.TeklifDurumAdi)
                                                </td>
                                                <td style="display:none">
                                                    @Html.DisplayFor(modelItem => item.AlimGroupByTeklifId.ITStransferDurumAdi)
                                                </td>
                                                <td style="display:none">
                                                    @Html.DisplayFor(modelItem => item.AlimGroupByTeklifId.TeklifVerenEczaneGrupAdi)
                                                </td>
                                                <td style="display:none">
                                                    @Html.DisplayFor(model => item.AlimGroupByTeklifId.TeklifTurAdi)
                                                </td>
                                            </tr>
                                        }
                                    </tbody>

                                </table>

                            </td>
                        </tr>

                    }
                </tbody>
            </table>
        <div id="myPaging"></div>
    </div>
   
    @if (Model.Count() > 0)
    {
    }
    else
    {     
        <div class="col-8">
                <div class="alert alert-info alert-dismissible fade show mt-2" role="alert">
                    <i class="fa fa-info-circle"></i> Hiç alım yok.
                    <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
            </div>       
    }
</div>
     

            @Html.Hidden("maximumMiktar")
            @Html.Hidden("minimumMiktar")
            @section Styles{
                @Styles.Render("~/bundle/jqueryui/style")
            }
            @section Scripts{
                @Scripts.Render("~/bundle/ajax")
                @Scripts.Render("~/bundle/scriptsDetailTable/script")
                @Scripts.Render("~/bundle/queryui/scripts")
            }
            <script>

        $(document).ready(function () {
            //alert('1')
            setTimeout(function () { $('.alert-success').addClass('elemaniUcur'); }, 2000);
            setTimeout(function () { $('.alert-danger').addClass('elemaniUcur'); }, 2000);

            //model string halde çekilir
            var model = @Html.Raw(Json.Encode(Model));
            //-----------------------myPaging-------------------------
            var totalRow = model.length;
            //alert(totalRow)
            var pageSize = 10;
            var totalPage = 0
            var currentPage = 1
            if (totalRow != 0 && pageSize != 0) {
                totalPage = Math.ceil(totalRow / pageSize);
                currentPage = model[0].Pager.CurrentPage;
            }
            //alert(currentPage)
            function makeActive(curPage) {
                //alert( (curPage - 1) )
                $("#myPaging > ul.pagination > li").each(function (i, el) {
                    if (i == (curPage))
                        $(this).addClass("active");
                    else
                        $(this).removeClass("active")
                });
            }
            function CreatePagingButtons() {
                //alert('totalPage: ' + totalPage)
                var curPage = model[0].Pager.CurrentPage;
                //tablo içindeki controllera gönderilen çağrılar bu değeri kullanıyor, geri dönünce aynı sayfaya gelsin diye:
                $("#page").val(curPage)
                //alert('curPage: ' + curPage)
                //myPaging div e ul eklenir
                $("#myPaging").prepend("<ul class=\"pagination tableRowDesign\"></ul>");
                $("#myPaging > ul.pagination").prepend(
                    $("<li id=\"totalItems\" class=\"udo\"><a class=\"page-link\" >Toplam Satır: " + totalRow + " </a> </li>")
                );
                //ileri tuşu eklenir
                $("#myPaging > ul.pagination").prepend(
                    $("<li id=\"lastPage\" class=\"udo\"><a class=\"page-link\" ><i class=\"fa fa-fast-forward\"></a></li>")
                );
                //sayılar eklenir
                $("#myPaging > ul.pagination").each(function (i, el) {
                    for (var i = 0; i < totalPage; i++) {
                        if (i == totalPage - (curPage - 1) - 1)
                            $(this).prepend("<li  class=\"page-item active\"></li>");
                        else
                            $(this).prepend("<li  class=\"page-item\"></li>");
                    }
                });
                //sayılara page-link classı eklenir
                $("#myPaging > ul > li.page-item").each(function (i, el) {
                    $(this).prepend(
                        $("<a id=\"page_Link_" + i + "\" >" + (i + 1) + "</a>").addClass("page-link")
                    );
                });
                //geri tuşu eklenir
                $("#myPaging > ul.pagination").prepend(
                    $("<li id=\"firstPage\" class=\"udo\"><a class=\"page-link\" ><i class=\"fa fa-fast-backward\"></a></li>")
                );
                //sayılara basınca ne olcağını .on ile belirledik
                $("#myPaging > ul > li.page-item").on("click", function () {
                    //alert($(this).text());
                    //alert('pageSize: ' + pageSize)
                    $("#page").val($(this).text())
                    getPaging($(this).text())
                    makeActive($(this).text())
                });
                //oklara basınca ne olcağını .on ile belirledik
                $("#myPaging > ul > li.udo").on("click", function () {
                    //alert(this.id);
                    if (this.id == "firstPage") {
                        $("#page").val(1)
                        getPaging(1)
                        makeActive(1)
                    }
                    else {
                        $("#page").val(totalPage)
                        getPaging(totalPage)
                        makeActive(totalPage)
                    }
                });
            }
            function getPaging(prCurrentPage) {
                $("#main #gridT > tbody > tr td.expandm").each(function (i, el) {
                    $(this).toggleClass("expandm collapsem");
                    $(this).parent().closest("tr").next().slideToggle(1);
                });
                $("#main #gridT > tbody > tr.gridtr").each(function (i, el) {
                    if (i >= pageSize * (prCurrentPage - 1) && i < pageSize * prCurrentPage) {
                        $(this).css('display', 'table-row');
                    }
                    else {
                        $(this).css('display', 'none');
                    }
                });
            }
            //$("span.pie").peity("pie")

            //------------------searching-----------------
            $("#myInput").on("keyup", function () {
                var value = $(this).val().toLocaleLowerCase('tr-TR');
                $("#gridT tbody tr").filter(function () {
                    $(this).toggle($(this).text().toLocaleLowerCase('tr-TR').indexOf(value) > -1);
                });
                if ($(this).val().length == 0) {
                    afterSearchingSetExpand()
                    getPaging($("#page").val())
                }
            });
            $("#myInputForSubGrid").on("keyup", function () {
            //arama başlayınca tüm alt satırları aç
            $("#main #gridT > tbody > tr td.collapsem").each(function (i, el) {
                $(this).parent().closest("tr").next().slideToggle(1);
                $(this).toggleClass("expandm collapsem");
            });
            //eşleşmeyen satırları kapat
            var value = $(this).val().toLocaleLowerCase('tr-TR');
            $("#subT tbody tr").filter(function () {
                $(this).toggle($(this).text().toLocaleLowerCase('tr-TR').indexOf(value) > -1);
            });
            //arama bitince yani arama kelimesi uzunluğu sıfır olunca tüm açılan satırları kapat
           if ($(this).val().length == 0) {
                $("#main #gridT > tbody > tr td.expandm").each(function (i, el) {
                    $(this).toggleClass("expandm collapsem");
                    $(this).parent().closest("tr").next().slideToggle(1);
                });
            }
            //alım aramasında satırların hepsini açıp aramadan önceki durumu kaybettiğimiz için aramadan önceki hale dönemedik
            });

            function afterSearchingSetExpand() {
                $("#main #gridT > tbody > tr td.collapsem").each(function (i, el) {
                    var compareString = model[i].AlimDetay.Expanded;
                    if (!compareString) {
                        //kapalıysa, default açık geri geldiği için kapatsın, açıksa açık kalsın
                        $(this).parent().closest("tr").next().slideToggle(1);
                    }
                    else {//açıksa, default + geri geldiğin için - yapsın,
                        $(this).toggleClass("collapsem expandm");
                    }
                });
                // daha sonradan yapılan değişiklik sebebiyle subGrid de veri olmayan başlıklar da kapansın aramadan sonra:
                $("#main #gridT > tbody > tr td.expand").each(function (i, el) {
                    $(this).parent().closest("tr").next().slideToggle(1);
                });
                //getPaging(model[0].Pager.CurrentPage)

            }
            //alert('3')
            var expandedIDs = new Array();
            //alert('4')

            //alert('5')
            //header hepsini açıp kapatır
            $(".hoverEffforHeader").click(function () {
                var compareStringForClass = $(this).attr("class");
                //alert('compareStringForClass: ' + compareStringForClass)

                if (compareStringForClass == "hoverEffforHeader collapsemForHeader") {
                    $("#main #gridT > tbody > tr td.collapsem").each(function (i, el) {
                        $(this).parent().closest("tr").next().slideToggle(100);
                        $(this).toggleClass("expandm collapsem");

                    });
                }
                else {
                    $("#main #gridT > tbody > tr td.expandm").each(function (i, el) {
                        $(this).parent().closest("tr").next().slideToggle(100);
                        $(this).toggleClass("expandm collapsem");

                    });

                }
                $(this).toggleClass("expandmForHeader collapsemForHeader");
            });
            veriyiGizleLoadingGifiGoster();
            //alert('6')
            createNestedTable();
            checkBeforeChecked();

            function createNestedTable() {
                //nested table
                //alt satırlar arka plan rengi
                $("#main #gridT > tbody > tr").each(function (i, el) {//i 11 ??
                    $("#main #subT > tbody > tr").each(function (i, el) {
                        var subTr_id = $(this).attr('name')
                        //alert('subTr_id: ' + subTr_id)
                        var id = subTr_id.substr(6, subTr_id.length - 6);
                        //alert('id: ' + id)
                        var alimDurumId = id
                        //alert(alimDurumId);
                        if (alimDurumId == 1)
                            $(this).addClass("arkaPlanRengiBeklemede")
                        else if (alimDurumId == 2)
                            $(this).addClass("arkaPlanRengiBarkodluGonderildi")
                        else if (alimDurumId == 3)
                            $(this).addClass("arkaPlanRengiBarkodsuzGonderildi")
                        else if (alimDurumId == 4)
                            $(this).addClass("arkaPlanRengiAktif")
                        else if (alimDurumId == 5)
                            $(this).addClass("arkaPlanRengiPasif")
                    });
                });
                var size = $("#main #gridT > thead > tr >th").length; // get total column
                //alert('model.length: ' + model.length);
               // alert('size: ' + size);
                $("#main #gridT > thead > tr >th").last().remove(); // remove last column
                $("#main #gridT > thead > tr").prepend("<th></th>"); // add one column at first for collapsible column
                $("#main #gridT > tbody > tr").each(function (i, el) {
                    $(this).addClass("gridtr")
                    //alert('i: ' + i)
                    var alimGroupByTeklifId = model[i].AlimGroupByTeklifId.Id
                    //alert('alimGroupByTeklifId: ' + alimGroupByTeklifId)
                    //alert('model[i].AlimGroupByTeklifId.AlimDurumId: ' + model[i].AlimGroupByTeklifId.AlimDurumId)
                    //satırların arka plan renkleri
                    if (model[i].AlimGroupByTeklifId.AlimDurumId == 1)
                        $(this).addClass("arkaPlanRengiBeklemede")
                    else if (model[i].AlimGroupByTeklifId.AlimDurumId == 2)
                        $(this).addClass("arkaPlanRengiBarkodluGonderildi")
                    else if (model[i].AlimGroupByTeklifId.AlimDurumId == 3)
                        $(this).addClass("arkaPlanRengiBarkodsuzGonderildi")
                    else if (model[i].AlimGroupByTeklifId.AlimDurumId == 4)
                        $(this).addClass("arkaPlanRengiAktif")
                    else if (model[i].AlimGroupByTeklifId.AlimDurumId == 5)
                        $(this).addClass("arkaPlanRengiPasif")

                    if (model[i].AlimDetaylar[0])
                    {//alt satırda veri varsa
                        $(this).prepend(
                            $("<td id=\"" + alimGroupByTeklifId + "\" ></td>")//sytle=\"width:150px\"
                            .addClass("expandm")
                            .addClass("hoverEff")
                            // .attr('title', "Bu tekliften yapılan diğer alimlar için tıklayınız")
                        );
                       //alert('if model[i].AlimDetaylar[0]: ' + model[i].AlimDetaylar[0])

                    }
                    else
                    {
                        $(this).prepend(
                            $("<td id=\"" + alimGroupByTeklifId + "\" ></td>")//sytle=\"width:150px\"
                                .addClass("expand")
                            //.addClass("hoverEff")
                            // .attr('title', "Bu tekliften yapılan diğer alimlar için tıklayınız")
                        );
                        //alert('else model[i].AlimDetaylar[0]: ' + model[i].AlimDetaylar[0])

                    }

                    //alert('xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx')

                    //Now get sub table from last column and add this to the next new added row
                    var table = $("table", this).parent().html();
                    //add new row with this subtable
                    //alert('model[i].AlimDetaylar[0].Miktar: ' + model[i].AlimDetaylar[0])
                    //if (model[i].AlimDetaylar[0])
                    $(this).after("<tr><td></td><td  style='padding:5px; margin:0px; font-size:smaller;' colspan='" + (size - 1) + "'>" + table + "</td></tr>");
                    $("table", this).parent().remove();
                    //alert('!!!!!!!!!!!!!!!!!!!!!!!!!!!!111')
                });
                //by default make all subgrid in collapse mode
                //alert('main')
                $("#main #gridT > tbody > tr td.expand").each(function (i, el) {
                    $(this).parent().closest("tr").next().slideToggle(1);
                });
                $("#main #gridT > tbody > tr td.expandm").each(function (i, el) {
                    $(this).toggleClass("expandm collapsem");
                    $(this).parent().closest("tr").next().slideToggle(1);
                    //alert('i: ' + i)
                    var compareString2 = model[i].AlimGroupByTeklifId.Expanded;//grid de genişletilmiş satırlar genişletilmiş gösterilir
                    //alert('compareString2: ' + compareString2)
                   // alert('model[i].AlimDetay.Id : ' + model[i].AlimDetay.Id)

                    if (true == compareString2) {
                        //alert('if true model[i].TeklifDetay.Id: ' + model[i].TeklifDetay.Id)
                        expandedIDs.push(model[i].AlimGroupByTeklifId.Id);
                        $("#expandedList").val(expandedIDs);

                        $(this).toggleClass("expandm collapsem");
                        $(this).parent().closest("tr").next().slideToggle(1);
                    }
                });
                //set what to do + and - icons
                //alert('hoverEff')
                $('.hoverEff').click(function () {
                    $(this).parent().closest("tr").next().slideToggle(100);
                    $(this).toggleClass("expandm collapsem");

                    var id = $(this).attr("id");
                    //alert('$(this).attr("id"): ' + id);
                    var compareStringForClass = $(this).attr("class");
                    //alert('compareStringForClass: ' + compareStringForClass)
                    if (compareStringForClass == "hoverEff expandm")
                    {
                        //alert('if')
                        expandedIDs.push(id);
                    }
                    else
                    {
                        //alert('else')
                        expandedIDs.pop(id);
                    }
                    $("#expandedList").val(expandedIDs);
                   // alert('expandedList :' + $("#expandedList").val());
                });

            }
            function veriyiGizleLoadingGifiGoster() {
                document.getElementById("loading").style.visibility = "visible";//sayfa yüklenirken loading gif i gösterilir
                document.getElementById("div1").style.visibility = "hidden";//sayfa yüklenirken tablo gizlenir
              //  document.getElementById("div_searching").style.visibility = "hidden";//sayfa yüklenirken tablo gizlenir
                acilisiGeciktir()
              //  loadingGifiGizleVeriyiGoster()
            }
            function acilisiGeciktir() {
                setTimeout(
                    loadingGifiGizleVeriyiGoster, /* Request next message  */
                    1 /* ..after ms seconds */
                );
            }
            function loadingGifiGizleVeriyiGoster() {
                document.getElementById("div1").style.visibility = "visible";//tablo gösterilir
               // document.getElementById("div_searching").style.visibility = "visible";//sayfa yüklenirken tablo gizlenir
                document.getElementById("loading").style.visibility = "hidden";//gif gizlenir
                document.getElementById("loading").style.display = "none";//gif yer kaplamasın
            }
            function checkBeforeChecked() {
                //alert(JSON.stringify(model));
               // alert(model.length);
            for (var i = 0; i < model.length; i++) {
                var compareString = model[i].AlimGroupByTeklifId.Checked;//grid için bir önceki işlemden check edilenler alınır ve true ise check edilir
              //  alert(compareString)
                if (true == compareString) { //compare to the checkbox value
                    document.getElementById('alimDetay_' + model[i].AlimGroupByTeklifId.Id).checked = true;
                    //continue;
                }

            }
            }

            $("#main #gridT > tbody > tr > td ").dblclick(function () {//başlıktaki check ile tüm teklifler check edilir, alımlar edilmez

               // alert('cell Clicked')
                var subTr_id = this.id;
                // alert('subTr_id: ' + subTr_id)

                var id = subTr_id.substr(4, subTr_id.length - 4);
                var alanAdi = subTr_id.substr(0, 3);
                if (alanAdi == "dgt") {
                    $('#TeklifVerenEczaneGrupIdForDaGiTiCi').val(id);//indexte
                    getDagitici()
                    $('#myDagiticiModal').modal('toggle');
                }
                else if (alanAdi == "ald") {
                    $('#AlimIDForALD').val(id);
                    $('#myALDModal').modal('toggle');
                }
                else if (alanAdi == "its") {
                    $('#AlimIDForITS').val(id);
                    $('#myITSModal').modal('toggle');
                }
                else {
                   // alert('Bu alanı değiştiremezsiniz');
                }

            });
            function getDagitici() {
                //var form = $('#__AjaxAntiForgeryForm');
                //var token = $('input[name="__RequestVerificationToken"]', form).val();
                var TeklifVerenEczaneGrupIdForDaGiTiCi = $('#TeklifVerenEczaneGrupIdForDaGiTiCi').val();
                //alert('TeklifVerenEczaneGrupIdForDaGiTiCi: ' + TeklifVerenEczaneGrupIdForDaGiTiCi)
                $.ajax({
                    type: "GET",
                    url: "../../../Kullanici/Eczane/GetDagiticiDetaylar",
                    data: {
                      //  __RequestVerificationToken: token,
                        EczaneGrupId: TeklifVerenEczaneGrupIdForDaGiTiCi
                    },
                    //data: "{'AlimIDForALD':" + AlimIDForALD + ",'AlimDurumId':" + AlimDurumId +
                    //    ",'ExpandedForALD': " + ExpandedForALD + ",'__RequestVerificationToken':" + token + "  }",
                    //__RequestVerificationToken: token,
                    // contentType: "application/json; charset=utf-8",
                    dataType: "html",
                    success: function (data) {
                        //alert('success');
                        //alert(data)
                        //location.reload();
                        $("#dagticidetaylar").html(data);
                    },
                    error: function (request, textStatus, thrownError) {
                        alert(request.status);
                        alert(thrownError);
                        //location.reload();
                    }
                });
                // $('#formALD').submit();
                //location.reload();
            }

            $('#btnExceleAktar').click(function () {
                // alert('ConfirmSubmit')
                exportToExcel();
                //location.reload();
            });
            function exportToExcel() {
                var htmls = "";
                var uri = 'data:application/vnd.ms-excel;base64,';
                var template = '<html xmlns:o="urn:schemas-microsoft-com:office:office" xmlns:x="urn:schemas-microsoft-com:office:excel" xmlns="http://www.w3.org/TR/REC-html40"><meta http-equiv="content-type" content="application/vnd.ms-excel; charset=UTF-8"><head><!--[if gte mso 9]><xml><x:ExcelWorkbook><x:ExcelWorksheets><x:ExcelWorksheet><x:Name>{worksheet}</x:Name><x:WorksheetOptions><x:DisplayGridlines/></x:WorksheetOptions></x:ExcelWorksheet></x:ExcelWorksheets></x:ExcelWorkbook></xml><![endif]--></head><body><table>{table}</table></body></html>';
                var base64 = function (s) {
                    return window.btoa(unescape(encodeURIComponent(s)))
                };

                var format = function (s, c) {
                    return s.replace(/{(\w+)}/g, function (m, p) {
                        return c[p];
                    })
                };

                htmls = $("table").html();

                var ctx = {
                    worksheet: 'Worksheet',
                    table: htmls
                }

                var link = document.createElement("a");
                link.download = "export.xls";
                link.href = uri + base64(format(template, ctx));
                link.click();
            }
            if (totalPage > 1) {
                CreatePagingButtons()
                getPaging(currentPage);
            }
        });

            </script>


